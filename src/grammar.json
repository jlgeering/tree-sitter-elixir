{
  "name": "elixir",
  "rules": {
    "program": {
      "type": "REPEAT",
      "content": {
        "type": "SYMBOL",
        "name": "_expression"
      }
    },
    "_expression": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "integer"
        },
        {
          "type": "SYMBOL",
          "name": "float"
        },
        {
          "type": "SYMBOL",
          "name": "true"
        },
        {
          "type": "SYMBOL",
          "name": "false"
        },
        {
          "type": "SYMBOL",
          "name": "atom"
        },
        {
          "type": "SYMBOL",
          "name": "nil"
        },
        {
          "type": "SYMBOL",
          "name": "tuple"
        }
      ]
    },
    "integer": {
      "type": "PATTERN",
      "value": "0b[01](_?[01])*|0o[0-7](_?[0-7])*|0x[0-9a-fA-F](_?[0-9a-fA-F])*|\\d(_?\\d)*"
    },
    "float": {
      "type": "PATTERN",
      "value": "\\d(_?\\d)*\\.\\d(_?\\d)*([eE][\\+-]?\\d(_?\\d)*)?"
    },
    "true": {
      "type": "CHOICE",
      "members": [
        {
          "type": "STRING",
          "value": "true"
        },
        {
          "type": "STRING",
          "value": ":true"
        }
      ]
    },
    "false": {
      "type": "CHOICE",
      "members": [
        {
          "type": "STRING",
          "value": "false"
        },
        {
          "type": "STRING",
          "value": ":false"
        }
      ]
    },
    "atom": {
      "type": "PATTERN",
      "value": ":\\w(_?\\w)*|:'.*'|:\".*\""
    },
    "nil": {
      "type": "STRING",
      "value": "nil"
    },
    "tuple": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "{"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SEQ",
              "members": [
                {
                  "type": "SYMBOL",
                  "name": "_expression"
                },
                {
                  "type": "REPEAT",
                  "content": {
                    "type": "SEQ",
                    "members": [
                      {
                        "type": "STRING",
                        "value": ","
                      },
                      {
                        "type": "SYMBOL",
                        "name": "_expression"
                      }
                    ]
                  }
                },
                {
                  "type": "CHOICE",
                  "members": [
                    {
                      "type": "STRING",
                      "value": ","
                    },
                    {
                      "type": "BLANK"
                    }
                  ]
                }
              ]
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "STRING",
          "value": "}"
        }
      ]
    },
    "comment": {
      "type": "TOKEN",
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "STRING",
            "value": "#"
          },
          {
            "type": "PATTERN",
            "value": ".*"
          }
        ]
      }
    }
  },
  "extras": [
    {
      "type": "SYMBOL",
      "name": "comment"
    },
    {
      "type": "PATTERN",
      "value": "\\s|\\\\\\n"
    }
  ],
  "conflicts": [],
  "externals": [],
  "inline": []
}